{"version":3,"sources":["services/services.js","components/Pagination/Pagination.js","screens/Home/Home.js","screens/Collections/Collections.js","screens/SendEmail/SendEmail.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["callApi","text","a","fetch","then","res","json","data","console","log","Search","dataMovies","catch","err","getByYear","Year","txtBuscar","getById","id","Pagination","movieData","addCollection","useEffect","setData","useState","currentPage","setcurrentPage","itemsPerPage","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","onClick","className","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","movie","index","src","Poster","Title","title","href","e","preventDefault","setToCollection","Type","info","genres","year","to","imdbID","disabled","Home","setMovies","moviedata","setTxtBuscar","movies","setDate","onChangeTxtBuscar","value","getMovies","onChangeDate","Date","onChange","placeholder","type","htmlFor","getMoviesArray","localStorage","getItem","array","JSON","parse","newArray","setItem","stringify","initArray","addToCollection","Collections","getData","SendEmail","match","fetchData","params","setDataMovie","dataMovie","email","setEmail","transport","host","secure","auth","user","pass","defaults","from","WelcomeEmail","firstName","subject","body","onSubmit","for","Released","rows","cols","Mailer","Navbar","sidenav","document","querySelector","M","Sidenav","init","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe488e9c.chunk.js","sourcesContent":["export const callApi = async (text) => {\r\n    const apiKey = 'd489d640';\r\n    let dataMovies;\r\n\r\n  await fetch(`https://www.omdbapi.com/?s=${text}&apiKey=${apiKey}`)\r\n        .then(function(res){\r\n            return res.json();\r\n        })\r\n        .then(function(data){\r\n            console.log(data.Search);\r\n            dataMovies = data.Search;\r\n        })\r\n        .catch(err => console.log(err))\r\n    console.log(dataMovies)\r\n\r\n    return dataMovies;   \r\n}\r\n\r\nexport const getByYear = async (Year, txtBuscar) => {\r\n    const apiKey = 'd489d640';\r\n    let dataMovies;\r\n\r\n  await fetch(`https://www.omdbapi.com/?y=${Year}&s=${txtBuscar}&apiKey=${apiKey}`)\r\n        .then(function(res){\r\n            return res.json();\r\n        })\r\n        .then(function(data){\r\n            console.log(data);\r\n            dataMovies = data.Search;\r\n        })\r\n        .catch(err => console.log(err))\r\n    console.log(dataMovies)\r\n\r\n    return dataMovies;   \r\n}\r\n\r\nexport const getById = async (id) => {\r\n    const apiKey = 'd489d640';\r\n    let dataMovies;\r\n\r\n  await fetch(`https://www.omdbapi.com/?i=${id}&apiKey=${apiKey}`)\r\n        .then(function(res){\r\n            return res.json();\r\n        })\r\n        .then(function(data){           \r\n            dataMovies = data;\r\n        })\r\n        .catch(err => console.log(err))\r\n    \r\n\r\n    return dataMovies;   \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {  NavLink} from \"react-router-dom\";\r\n\r\nfunction Pagination({ movieData, addCollection }) {\r\n    \r\n    //evalua si los datos han cambiado para poder mostrarlos\r\n    useEffect(() => {\r\n        setData(movieData)\r\n    }, [movieData])\r\n   \r\n    //aqui guarda los datos a mostrar\r\n    const [data, setData] = useState(movieData);\r\n    \r\n    //pagina actual items por pagina\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n    //limites de numeros de pagianas\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    //actualiza la pagina actual\r\n    const handleClick = (event) => {\r\n        setcurrentPage(Number(event.target.id));\r\n    };\r\n\r\n    //guarda la cantidad de items a mostrar por paginas\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    //obtiene los post de la pagina actual\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    //guarda los numeros de las paginas\r\n    const renderPageNumbers = pages.map((number) => {\r\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n            return (\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={handleClick}\r\n                    className={currentPage == number ? \"active\" : null}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n   \r\n    //manejo del next boton\r\n    const handleNextbtn = () => {\r\n        setcurrentPage(currentPage + 1);\r\n\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    //manejo del prev boton\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n        if ((currentPage - 1) % pageNumberLimit == 0) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    //guarda el li del next boton\r\n    let pageIncrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit) {\r\n        pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n    }\r\n\r\n    //guarda el li del prev boton\r\n    let pageDecrementBtn = null;\r\n    if (minPageNumberLimit >= 1) {\r\n        pageDecrementBtn = <li  onClick={handlePrevbtn}> &hellip; </li>;\r\n    }\r\n\r\n    const setToCollection = (e, movie) =>{\r\n        e.preventDefault()\r\n        addCollection(movie)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>List of movies</h1> <br />\r\n               \r\n                <div className=\"row\">\r\n                    {currentItems.map((movie, index) => {\r\n                        return (\r\n                            <div key={index} className=\"col s12 m5 l5 xl5\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-image\">\r\n                                        <img src={`${movie.Poster ? movie.Poster : 'https://m.media-amazon.com/images/I/61Fm+N+NncL._AC_SL1008_.jpg'}`} />\r\n                                        <span className=\"card-title\">{movie.Title ? movie.title : movie.title}</span>\r\n                                        <a href=\"/\" onClick={(e)=>setToCollection(e, movie)} className=\"btn-floating halfway-fab waves-effect waves-light red\"><i className=\"material-icons\">favorite_border</i></a>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        <p>{movie.Type ? movie.Type: movie.Title}</p>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        <p>{movie.Type ? movie.Type: movie.info.genres[0]}</p>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        <p>{movie.Year ? movie.Year: movie.year}</p>\r\n                                    </div>\r\n                                    <div className=\"card-action\">\r\n                                        <NavLink to={`/sendemail/${movie.imdbID ? movie.imdbID : 'tt1798709'} `}>Compartir</NavLink>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        );\r\n                    })}\r\n                </div>\r\n                <ul className=\"pagination\">\r\n                    <li>\r\n                        <button className=\"waves-effect waves-light btn-small\"\r\n                            onClick={handlePrevbtn}\r\n                            disabled={currentPage == pages[0] ? true : false}\r\n                        >\r\n                            Prev\r\n                        </button>\r\n                    </li>\r\n                    {pageDecrementBtn}\r\n                    {renderPageNumbers}\r\n                    {pageIncrementBtn}\r\n\r\n                    <li>\r\n                        <button className=\"waves-effect waves-light btn-small\"\r\n                            onClick={handleNextbtn}\r\n                            disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n               \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from \"react\";\r\nimport { callApi } from \"../../services/services\";\r\nimport { getByYear } from \"../../services/services\";\r\nimport moviedata from \"../../services/moviedata.json\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\nexport const addToCollectionTest = (movie) => {\r\n    const getMoviesArray = localStorage.getItem('movies');\r\n    const array = JSON.parse(getMoviesArray);\r\n\r\n    if (!getMoviesArray) {\r\n        const initArray = [movie];\r\n        localStorage.setItem(\"movies\", JSON.stringify(initArray));\r\n    } else {\r\n        const newArray = [movie, ...array];\r\n        localStorage.setItem(\"movies\", JSON.stringify(newArray));\r\n    }\r\n\r\n    const getMovies = localStorage.getItem('movies');\r\n    if (getMovies) {\r\n        return getMovies;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    useEffect(() => {\r\n        setMovies(moviedata)\r\n    }, [])\r\n\r\n    const [txtBuscar, setTxtBuscar] = useState('');\r\n    const [movies, setMovies] = useState(null);\r\n    const [date, setDate] = useState('');\r\n\r\n    const onChangeTxtBuscar = async (e) => {\r\n        setTxtBuscar(e.target.value)\r\n        let getMovies = await callApi(e.target.value);\r\n        setMovies(getMovies);\r\n    }\r\n\r\n    const onChangeDate = async (e) => {\r\n        const year = new Date(e.target.value);\r\n        setDate(year)\r\n        let getMovies = await getByYear(year, txtBuscar);\r\n        setMovies(getMovies);\r\n    }\r\n\r\n    //obtiene los las pelicualas desde el local storage si no existe\r\n    //inserta los nuevos datos cuando ya esta inicializado le agrega \r\n    //los siguientes peliculas favoritas a la colleccion\r\n    const addToCollection = (movie) => {\r\n        const getMoviesArray = localStorage.getItem('movies');\r\n        const array = JSON.parse(getMoviesArray);\r\n\r\n        if (!getMoviesArray) {\r\n            const initArray = [movie];\r\n            localStorage.setItem(\"movies\", JSON.stringify(initArray));\r\n        } else {\r\n            const newArray = [movie, ...array];\r\n            localStorage.setItem(\"movies\", JSON.stringify(newArray));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <input onChange={(e) => onChangeTxtBuscar(e)} value={txtBuscar} placeholder=\"movie\" id=\"txtBusar\" type=\"text\" className=\"validate\" />\r\n                        <label className=\"active\" htmlFor=\"txtBusar\">Movie to search</label>\r\n                    </div>\r\n                    <div className=\"col s6\">\r\n                        <input onChange={(e) => onChangeDate(e)} type=\"date\" className=\"datepicker\" />\r\n                    </div>\r\n                </div>\r\n\r\n                {movies ? <Pagination addCollection={(movie) => addToCollection(movie)} movieData={movies} /> : <></>}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\nexport const getTestData = () =>{\r\n    const getMoviesArray = localStorage.getItem('movies');\r\n    const array = JSON.parse(getMoviesArray);\r\n    if (array) {\r\n       return array\r\n    }\r\n} \r\n\r\nconst Collections = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    const getData = () =>{\r\n        const getMoviesArray = localStorage.getItem('movies');\r\n        const array = JSON.parse(getMoviesArray);\r\n        if (array) {\r\n            setMovies(array)\r\n        }\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {movies ? <Pagination movieData={movies} /> : <></>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Collections;","import React, { useEffect, useState } from \"react\";\r\nimport { getById } from '../../services/services';\r\nimport { Mailer } from 'nodemailer-react';\r\n\r\nexport const datamovie = (id) =>{\r\n    const data = getById(id);\r\n    return data;\r\n}\r\n\r\nconst SendEmail = ({ match }) => {\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await getById(match.params.id);\r\n            setDataMovie(data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const [dataMovie, setDataMovie] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n   \r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const transport = {\r\n        host: 'smtp.example.com',\r\n        secure: true,\r\n        auth: { user: 'username', pass: 'password' },\r\n    }\r\n\r\n    const defaults = {\r\n        from: \"sender@server.com\",\r\n    }\r\n\r\n    const Email = () => ({\r\n        subject: 'string',\r\n        body: 'ReactElement'\r\n    })\r\n\r\n    const WelcomeEmail = ({ firstName }) => ({\r\n        subject: `👋 ${firstName}`,\r\n        body: (\r\n          <div>\r\n            <p>Hello {firstName}!</p>\r\n            <p>Hope you'll enjoy the package!</p>\r\n          </div>\r\n        )\r\n      })\r\n\r\n    const sendEmail = () => Mailer(\r\n        { transport, defaults },\r\n        { WelcomeEmail }\r\n      )\r\n   \r\n\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h3>send email</h3>\r\n                    <form onSubmit={(e) => e.preventDefault()} className=\"col s12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <input value={email} onChange={onChangeEmail} id=\"input_email\" type=\"email\" data-length=\"10\" />\r\n                                <label for=\"input_email\">Email</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <input value={`titulo:${dataMovie.Title}`} id=\"input_text\" type=\"text\" data-length=\"10\" />\r\n                                <label for=\"input_text\">Asunto</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <textarea value={`titulo:${dataMovie.Title},Fecha inicio: ${dataMovie.Released}, Imagen: ${dataMovie.Poster}`} id=\"textarea2\" className=\"materialize-textarea\" data-length=\"400\" rows=\"10\" cols=\"50\">\r\n\r\n                                </textarea>\r\n                                <label for=\"textarea2\">Cuerpo</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <button onClick={() => sendEmail()} className=\"waves-effect waves-light btn\">enviar email</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendEmail;","import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst Navbar = () => {\r\n    useEffect(() => {\r\n        let sidenav = document.querySelector('#mobile-demo');\r\n        M.Sidenav.init(sidenav, {});\r\n    }, [])\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <NavLink to=\"/\" className=\"brand-logo\">Movies</NavLink>\r\n                    <a href=\"/\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li>\r\n                            <NavLink to=\"/collections\">Collections</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                <li>\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                    <NavLink to=\"/collections\">Collections</NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n        </header>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport Home from './screens/Home/Home';\nimport Collections from './screens/Collections/Collections';\nimport SendEmail from './screens/SendEmail/SendEmail';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/collections\" exact component={Collections} />\n          <Route path=\"/sendemail/:id\" exact component={SendEmail} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}